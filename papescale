#!/usr/bin/env bash

#LICENSE
# This is free and unencumbered software released into the public domain.
# 
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
# 
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
# 
# For more information, please refer to <https://unlicense.org>

# Display help
[ $# -ne 1 -o "${1}" = "--help" -o "${1}" = "-h" ] && echo "Usage: ${0##*/} {OPTION|(file)}

Cuts (file) into pieces based on current monitor layout as seen by xrandr.
OPTION may be
   -h or --help      to show this help
" && exit

TOTALX=`xrandr | head -n1 | awk '{print $8}'`
TOTALY=`xrandr | head -n1 | awk '{print $10}' | sed s/','//`
#echo "screen is " $TOTALX x $TOTALY

set_pape () {
    qdbus org.kde.plasmashell /PlasmaShell org.kde.PlasmaShell.evaluateScript 'var allDesktops = desktops();
print (allDesktops);
for ( i = 0; i < allDesktops.length; i++ ) {
    d = allDesktops[i];
    d.wallpaperPlugin = "org.kde.image";
    d.currentConfigGroup = Array("Wallpaper", "org.kde.image", "General");
    //we need to pass in each of our papes and set it - d is the current desktop as we loop over
    d.writeConfig("Image", "'file://home/jordan/Nextcloud/Photos/wallpaper/46L02C6.jpg'")
}'
}


#xrandr outputs in format as follows:
#EXAMPLE: 0: +*DP-4 2560/598x1440/336+1920+0  DP-4
# 0: display number - this would be X Display :0.0
# +*DP-4  + means the display is active, * means it's primary and DP-4 is the name
# 2560/598x1440/336+1920+0  This is the dimensions, physical size and offset.  
#   2560 width, 598mm by 1440, 336 mm 
#   +1920+0 -> offset horizontally by 1920, vertically by 0
#   0,0 for offset is bottom left of entire screen area

readarray -t SCREENS <<< $(xrandr --listactivemonitors|tail -n +2)
for i in "${SCREENS[@]}"
do
    #echo "working with: $i"
    NAME=`echo $i | cut -d " " -f 2 | sed s/+// | sed s/\*//`
    WIDTH=`echo $i | cut -d " " -f 3 | cut -d "/" -f 1` 
    HEIGHT=`echo $i | cut -d " " -f 3 | cut -d "x" -f 2 | cut -d "/" -f 1` 
    OFFX=`echo $i | cut -d " " -f 3 | cut -d "+" -f 2`
    OFFY=`echo $i | cut -d " " -f 3 | cut -d "+" -f 3`
  
    #echo $NAME is $WIDTH x $HEIGHT offset by $OFFX x and $OFFY y
    #echo running convert $1 -filter Cubic -resize "$TOTALX"x"$TOTALY"\! -crop "$WIDTH"x"$HEIGHT"+"$OFFX"+"$OFFY" +repage $NAME-$1

    convert $1 -filter Cubic -resize "$TOTALX"x"$TOTALY"\! -crop "$WIDTH"x"$HEIGHT"+"$OFFX"+"$OFFY" +repage $NAME-$1 2>/dev/null
    
done


